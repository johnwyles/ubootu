---
# Configure shell dotfiles

- name: Detect current shell
  ansible.builtin.set_fact:
    user_shell: "{{ ansible_env.SHELL | basename }}"

- name: Create shell configuration directory
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.config/{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - bash
    - zsh
    - fish
  when: item in ['bash', 'zsh', 'fish'] and user_shell == item

# Bash configuration
- name: Configure Bash
  block:
    - name: Create .bashrc.d directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.bashrc.d"
        state: directory
        mode: '0755'

    - name: Create custom bash aliases
      ansible.builtin.template:
        src: bash_aliases.j2
        dest: "{{ ansible_env.HOME }}/.bash_aliases"
        mode: '0644'
        backup: yes

    - name: Add custom bash configuration
      ansible.builtin.template:
        src: bashrc_custom.j2
        dest: "{{ ansible_env.HOME }}/.bashrc.d/custom"
        mode: '0644'

    - name: Source custom files in .bashrc
      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        block: |
          # Source custom configurations
          if [ -d ~/.bashrc.d ]; then
            for file in ~/.bashrc.d/*; do
              [ -r "$file" ] && source "$file"
            done
          fi

          # Source bash aliases
          [ -f ~/.bash_aliases ] && source ~/.bash_aliases
        marker: "# {mark} ANSIBLE MANAGED BLOCK - Custom configurations"
        create: yes
        backup: yes
  when: user_shell == 'bash'

# Zsh configuration
- name: Configure Zsh
  block:
    - name: Create .zshrc.d directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.zshrc.d"
        state: directory
        mode: '0755'

    - name: Create custom zsh aliases
      ansible.builtin.template:
        src: zsh_aliases.j2
        dest: "{{ ansible_env.HOME }}/.zsh_aliases"
        mode: '0644'
        backup: yes

    - name: Add custom zsh configuration
      ansible.builtin.template:
        src: zshrc_custom.j2
        dest: "{{ ansible_env.HOME }}/.zshrc.d/custom"
        mode: '0644'

    - name: Source custom files in .zshrc
      ansible.builtin.blockinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        block: |
          # Source custom configurations
          if [ -d ~/.zshrc.d ]; then
            for file in ~/.zshrc.d/*; do
              [ -r "$file" ] && source "$file"
            done
          fi

          # Source zsh aliases
          [ -f ~/.zsh_aliases ] && source ~/.zsh_aliases
        marker: "# {mark} ANSIBLE MANAGED BLOCK - Custom configurations"
        create: yes
        backup: yes
  when: user_shell == 'zsh'

# Fish configuration
- name: Configure Fish
  block:
    - name: Create fish functions directory
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.config/fish/functions"
        state: directory
        mode: '0755'

    - name: Create fish aliases as functions
      ansible.builtin.template:
        src: "fish_alias_{{ item.alias }}.fish.j2"
        dest: "{{ ansible_env.HOME }}/.config/fish/functions/{{ item.alias }}.fish"
        mode: '0644'
      loop: "{{ shell_custom_aliases }}"

    - name: Add custom fish configuration
      ansible.builtin.template:
        src: fish_custom.j2
        dest: "{{ ansible_env.HOME }}/.config/fish/conf.d/custom.fish"
        mode: '0644'
  when: user_shell == 'fish'

# Environment variables (common for all shells)
- name: Set environment variables in profile
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/.profile"
    block: |
      # Custom environment variables
      {% for var in custom_env_vars %}
      export {{ var.name }}="{{ var.value }}"
      {% endfor %}
    marker: "# {mark} ANSIBLE MANAGED BLOCK - Environment variables"
    create: yes
    mode: '0644'
