---
# Configure Git

- name: Set Git user name
  git_config:
    name: user.name
    value: "{{ git_user_name }}"
    scope: global
  when: git_user_name | length > 0

- name: Set Git user email
  git_config:
    name: user.email
    value: "{{ git_user_email }}"
    scope: global
  when: git_user_email | length > 0

- name: Set Git default branch
  git_config:
    name: init.defaultBranch
    value: "{{ git_default_branch }}"
    scope: global

- name: Configure Git aliases
  git_config:
    name: "alias.{{ item.alias }}"
    value: "{{ item.command }}"
    scope: global
  loop: "{{ git_aliases }}"

- name: Set Git editor
  git_config:
    name: core.editor
    value: "{{ 'code --wait' if 'vscode' in code_editors else 'vim' }}"
    scope: global

- name: Configure Git colors
  git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: global
  loop:
    - { name: 'color.ui', value: 'auto' }
    - { name: 'color.branch', value: 'auto' }
    - { name: 'color.diff', value: 'auto' }
    - { name: 'color.status', value: 'auto' }

- name: Configure Git push behavior
  git_config:
    name: push.default
    value: simple
    scope: global

- name: Configure Git pull behavior
  git_config:
    name: pull.rebase
    value: 'false'
    scope: global

- name: Enable Git rerere
  git_config:
    name: rerere.enabled
    value: 'true'
    scope: global

- name: Create global gitignore
  ansible.builtin.template:
    src: gitignore_global.j2
    dest: "{{ ansible_env.HOME }}/.gitignore_global"
    mode: '0644'

- name: Configure global gitignore
  git_config:
    name: core.excludesfile
    value: "{{ ansible_env.HOME }}/.gitignore_global"
    scope: global

- name: Configure Git credentials helper
  git_config:
    name: credential.helper
    value: "cache --timeout=3600"
    scope: global

- name: Configure Git diff tool
  git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: global
  loop:
    - { name: 'diff.tool', value: 'vimdiff' }
    - { name: 'difftool.prompt', value: 'false' }
  when: "'vim' in managed_dotfiles"

- name: Configure Git merge tool
  git_config:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    scope: global
  loop:
    - { name: 'merge.tool', value: 'vimdiff' }
    - { name: 'mergetool.prompt', value: 'false' }
  when: "'vim' in managed_dotfiles"
