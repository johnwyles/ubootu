#!/bin/bash
# Development tools PATH configuration
# Managed by Ansible - Ubuntu Bootstrap

# Go
{% if 'go' in devtools_languages %}
export PATH=$PATH:/usr/local/go/bin
export GOPATH=$HOME/go
export PATH=$PATH:$GOPATH/bin
{% endif %}

# Rust
{% if 'rust' in devtools_languages or 'rustup' in devtools_version_managers %}
export PATH="$HOME/.cargo/bin:$PATH"
{% endif %}

# Python/pyenv
{% if 'pyenv' in devtools_version_managers %}
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"
{% endif %}

# Ruby/rbenv
{% if 'rbenv' in devtools_version_managers %}
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"
{% endif %}

# Node.js/nvm
{% if 'nvm' in devtools_version_managers %}
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
{% endif %}

# Java/jenv
{% if 'jenv' in devtools_version_managers %}
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"
{% endif %}

# SDKMAN
{% if devtools_install_sdkman %}
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
{% endif %}

# Go Version Manager
{% if 'gvm' in devtools_version_managers %}
[[ -s "$HOME/.gvm/scripts/gvm" ]] && source "$HOME/.gvm/scripts/gvm"
{% endif %}

# asdf
{% if 'asdf' in devtools_version_managers %}
. "$HOME/.asdf/asdf.sh"
. "$HOME/.asdf/completions/asdf.bash"
{% endif %}

# Flutter
{% if 'dart' in devtools_languages %}
export PATH="$PATH:/opt/flutter/bin"
{% endif %}

# Swift
{% if 'swift' in devtools_languages %}
export PATH="$PATH:/usr/local/bin"
{% endif %}

# Kotlin
{% if 'kotlin' in devtools_languages and 'jenv' not in devtools_version_managers %}
export PATH="$PATH:/opt/kotlinc/bin"
{% endif %}

# Zig
{% if 'zig' in devtools_languages %}
export PATH="$PATH:/usr/local/bin"
{% endif %}

# Julia
{% if 'julia' in devtools_languages %}
export PATH="$PATH:/usr/local/bin"
{% endif %}

# Conda/Mamba
{% if 'conda' in devtools_package_managers %}
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('$HOME/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
        . "$HOME/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<
{% endif %}