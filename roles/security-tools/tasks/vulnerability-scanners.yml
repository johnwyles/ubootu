---
# Install vulnerability scanning tools

# Metasploit Framework from official Rapid7 repository
- name: Add Metasploit GPG key
  apt_key:
    url: https://apt.metasploit.com/metasploit-framework.gpg.key
    state: present
  become: yes
  when: "'metasploit' in sectools_vuln_scanners and sectools_use_official_repos"

- name: Add Metasploit repository
  apt_repository:
    repo: "deb https://apt.metasploit.com/ lucid main"
    state: present
    filename: metasploit
  become: yes
  when: "'metasploit' in sectools_vuln_scanners and sectools_use_official_repos"

- name: Install Metasploit Framework
  ansible.builtin.apt:
    name: metasploit-framework
    state: present
    update_cache: yes
  become: yes
  when: "'metasploit' in sectools_vuln_scanners"

# SQLMap from GitHub (latest)
- name: Clone SQLMap repository
  ansible.builtin.git:
    repo: https://github.com/sqlmapproject/sqlmap.git
    dest: /opt/sqlmap
    version: master
  become: yes
  when: "'sqlmap' in sectools_vuln_scanners"

- name: Create SQLMap wrapper script
  ansible.builtin.copy:
    content: |
      #!/bin/bash
      python3 /opt/sqlmap/sqlmap.py "$@"
    dest: /usr/local/bin/sqlmap
    mode: '0755'
  become: yes
  when: "'sqlmap' in sectools_vuln_scanners"

# Nikto from GitHub
- name: Clone Nikto repository
  ansible.builtin.git:
    repo: https://github.com/sullo/nikto.git
    dest: /opt/nikto
    version: master
  become: yes
  when: "'nikto' in sectools_vuln_scanners"

- name: Create Nikto wrapper script
  ansible.builtin.copy:
    content: |
      #!/bin/bash
      cd /opt/nikto/program
      perl nikto.pl "$@"
    dest: /usr/local/bin/nikto
    mode: '0755'
  become: yes
  when: "'nikto' in sectools_vuln_scanners"

- name: Install Nikto dependencies
  ansible.builtin.apt:
    name:
      - perl
      - libnet-ssleay-perl
      - libwhisker2-perl
    state: present
  become: yes
  when: "'nikto' in sectools_vuln_scanners"

# OpenVAS/GVM from official repository
- name: Add Greenbone (OpenVAS) PPA
  apt_repository:
    repo: "ppa:mrazavi/gvm"
    state: present
  become: yes
  when: "'openvas' in sectools_vuln_scanners and ansible_distribution_version is version('22.04', '>=')"

- name: Install GVM (OpenVAS)
  ansible.builtin.apt:
    name:
      - gvm
      - gvm-tools
      - greenbone-security-assistant
    state: present
    update_cache: yes
  become: yes
  when: "'openvas' in sectools_vuln_scanners"

- name: Initialize GVM setup
  ansible.builtin.shell: gvm-setup
  become: yes
  when: "'openvas' in sectools_vuln_scanners"
  register: gvm_setup
  changed_when: "'already exists' not in gvm_setup.stdout"
  failed_when: false

# Lynis from official repository
- name: Add Lynis GPG key
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: 013CAE8A6157B8E8A974FD34B1B2A2DD2D1F0ABC
    state: present
  become: yes
  when: "'lynis' in sectools_vuln_scanners"

- name: Add Lynis repository
  apt_repository:
    repo: "deb https://packages.cisofy.com/community/lynis/deb/ stable main"
    state: present
    filename: lynis
  become: yes
  when: "'lynis' in sectools_vuln_scanners"

- name: Install Lynis
  ansible.builtin.apt:
    name: lynis
    state: present
    update_cache: yes
  become: yes
  when: "'lynis' in sectools_vuln_scanners"

# Additional vulnerability scanners
- name: Install additional vulnerability scanning tools
  ansible.builtin.apt:
    name:
      - ncrack        # Network authentication cracker
      - sparta        # Network infrastructure penetration testing tool
      - legion        # Fork of Sparta
      - crackmapexec  # Post-exploitation tool
      - responder     # LLMNR/NBT-NS/mDNS poisoner
      - impacket-scripts  # Network protocol scripts
      - bloodhound    # Active Directory tool
      - ldapdomaindump    # LDAP enumeration
      - kerbrute      # Kerberos bruteforcer
    state: present
  become: yes

# BeEF (Browser Exploitation Framework) from GitHub
- name: Install BeEF dependencies
  ansible.builtin.apt:
    name:
      - ruby-full
      - ruby-dev
      - libsqlite3-dev
      - libxml2-dev
      - libxslt1-dev
      - libyaml-dev
      - zlib1g-dev
      - libssl-dev
      - libreadline-dev
    state: present
  become: yes
  when: "'beef' in sectools_vuln_scanners"

- name: Clone BeEF repository
  ansible.builtin.git:
    repo: https://github.com/beefproject/beef.git
    dest: /opt/beef
    version: master
  become: yes
  when: "'beef' in sectools_vuln_scanners"

- name: Install BeEF
  ansible.builtin.shell: |
    cd /opt/beef
    bundle install
  become: yes
  when: "'beef' in sectools_vuln_scanners"
  changed_when: false

# Searchsploit (ExploitDB) from official repository
- name: Clone ExploitDB repository
  ansible.builtin.git:
    repo: https://gitlab.com/exploit-database/exploitdb.git
    dest: /opt/exploitdb
    version: main
  become: yes

- name: Create searchsploit symlink
  ansible.builtin.file:
    src: /opt/exploitdb/searchsploit
    dest: /usr/local/bin/searchsploit
    state: link
  become: yes

# Additional recon tools
- name: Install recon-ng
  block:
    - name: Clone recon-ng
      ansible.builtin.git:
        repo: https://github.com/lanmaster53/recon-ng.git
        dest: /opt/recon-ng
        version: master
      become: yes

    - name: Install recon-ng requirements
      ansible.builtin.pip:
        requirements: /opt/recon-ng/REQUIREMENTS
        virtualenv: /opt/recon-ng/venv
        virtualenv_command: python3 -m venv
      become: yes

    - name: Create recon-ng wrapper
      ansible.builtin.copy:
        content: |
          #!/bin/bash
          cd /opt/recon-ng
          source venv/bin/activate
          python recon-ng "$@"
        dest: /usr/local/bin/recon-ng
        mode: '0755'
      become: yes
