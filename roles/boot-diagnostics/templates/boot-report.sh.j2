#!/bin/bash
# Comprehensive boot diagnostics report
# Generated by Ansible - Ubootu Boot Diagnostics

set -euo pipefail

# Colors for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

echo "==================================="
echo "   BOOT DIAGNOSTICS REPORT"
echo "==================================="
echo "Generated: $(date)"
echo "System: $(hostname) - $(lsb_release -d | cut -f2)"
echo "Kernel: $(uname -r)"
echo

# Function to check section
check_section() {
    local title="$1"
    echo -e "\n${GREEN}=== $title ===${NC}"
}

# Function to show warnings
show_warning() {
    echo -e "${YELLOW}WARNING: $1${NC}"
}

# Function to show errors
show_error() {
    echo -e "${RED}ERROR: $1${NC}"
}

# Boot time analysis
check_section "Boot Performance Analysis"
if command -v systemd-analyze >/dev/null; then
    systemd-analyze
    echo
    echo "Slowest services:"
    systemd-analyze blame | head -10
else
    show_warning "systemd-analyze not available"
fi

# Hardware errors
check_section "Hardware Error Detection"
if dmesg | grep -qiE "hardware error|i/o error"; then
    show_error "Hardware errors detected!"
    dmesg | grep -iE "hardware error|i/o error" | tail -10
else
    echo "No hardware errors detected"
fi

# Storage device issues
check_section "Storage Device Health"
echo "Checking for I/O errors..."
if dmesg | grep -q "I/O error"; then
    show_error "I/O errors detected on storage devices!"
    dmesg | grep "I/O error" | tail -10
    echo
    echo "Affected devices:"
    dmesg | grep "I/O error" | grep -o "dev [a-z]*" | sort | uniq
else
    echo "No I/O errors detected"
fi

# Graphics driver issues
check_section "Graphics Driver Status"
echo "Checking for graphics errors..."
if journalctl -b | grep -qE "(drm|i915|nvidia|amdgpu).*(error|fail)"; then
    show_warning "Graphics driver issues detected!"
    journalctl -b | grep -E "(drm|i915|nvidia|amdgpu).*(error|fail)" | tail -5
fi

# Service failures
check_section "System Service Status"
failed_count=$(systemctl --failed --no-pager --no-legend | wc -l)
if [ "$failed_count" -gt 0 ]; then
    show_error "$failed_count services have failed!"
    systemctl --failed
else
    echo "All services running successfully"
fi

# Boot messages that might be hidden
check_section "Hidden Boot Messages"
echo "Checking for dependency issues..."
if journalctl -b | grep -q "Job.*deleted to break ordering cycle"; then
    show_warning "Service dependency cycles detected during boot!"
    journalctl -b | grep "Job.*deleted to break ordering cycle"
fi

# Memory issues
check_section "Memory Status"
free -h
if dmesg | grep -q "Out of memory"; then
    show_error "Out of memory conditions detected during boot!"
fi

# Disk space
check_section "Disk Space"
df -h | grep -vE "tmpfs|devtmpfs|loop"
df -h | awk '$5+0 > 90 {print "WARNING: " $6 " is " $5 " full!"}'

# Recent critical errors
check_section "Recent Critical Errors"
journalctl -b -p crit --no-pager | tail -20 || echo "No critical errors"

# Summary
check_section "Summary and Recommendations"
echo
if [ "$failed_count" -gt 0 ] || dmesg | grep -qiE "error|fail"; then
    show_warning "Issues detected during boot!"
    echo
    echo "Recommendations:"
    echo "1. Review failed services with: systemctl status <service-name>"
    echo "2. Check full system journal: journalctl -b -p err"
    echo "3. For hardware errors, check device connections and run diagnostics"
    echo "4. Consider running in diagnostic boot mode (from GRUB menu)"
else
    echo -e "${GREEN}System booted successfully with no major issues detected.${NC}"
fi

echo
echo "Report saved to: /tmp/boot-report-$(date +%Y%m%d-%H%M%S).txt"
echo "For continuous monitoring, run: journalctl -f"
echo

# Save report
{
    echo "Boot Diagnostics Report - $(date)"
    echo "======================================="
    systemd-analyze
    echo
    echo "Failed Services:"
    systemctl --failed
    echo
    echo "Recent Errors:"
    journalctl -b -p err --no-pager | tail -50
} > "/tmp/boot-report-$(date +%Y%m%d-%H%M%S).txt"

read -p "Press Enter to exit..."