---
- name: Check Ubuntu version for Hyprland compatibility
  ansible.builtin.assert:
    that:
      - ansible_distribution == "Ubuntu"
      - ansible_distribution_version is version('24.04', '>=')
    fail_msg: "Hyprland requires Ubuntu 24.04 or newer. Current version: {{ ansible_distribution }} {{ ansible_distribution_version }}"
  tags: ['hyprland', 'version-check']

- name: Install Hyprland build dependencies
  ansible.builtin.apt:
    name: "{{ de_packages.hyprland }}"
    state: present
    update_cache: yes
  become: yes
  tags: ['hyprland', 'packages']

- name: Check if Hyprland is in Ubuntu 24.10+ universe repo
  ansible.builtin.shell: |
    apt-cache search hyprland | grep -q "^hyprland "
  register: hyprland_in_repo
  changed_when: false
  failed_when: false
  when: ansible_distribution_version is version('24.10', '>=')
  tags: ['hyprland']

- name: Install Hyprland from Ubuntu universe repository
  block:
    - name: Enable universe repository
      ansible.builtin.apt_repository:
        repo: "deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }} universe"
        state: present
      become: yes

    - name: Install Hyprland from repository
      ansible.builtin.apt:
        name: hyprland
        state: present
        update_cache: yes
      become: yes
  when:
    - ansible_distribution_version is version('24.10', '>=')
    - hyprland_in_repo.rc == 0
    - not de_hyprland_build_from_source
  tags: ['hyprland', 'packages']

- name: Install Hyprland from source or PPA for Ubuntu 24.04
  block:
    - name: Add Hyprland PPA for Ubuntu 24.04
      ansible.builtin.apt_repository:
        repo: "ppa:hyprland-ubuntu/hyprland"
        state: present
      become: yes
      when: not de_hyprland_build_from_source

    - name: Install Hyprland from PPA
      ansible.builtin.apt:
        name: hyprland
        state: present
        update_cache: yes
      become: yes
      when: not de_hyprland_build_from_source
  when:
    - ansible_distribution_version is version('24.04', '==')
    - not (ansible_distribution_version is version('24.10', '>=') and hyprland_in_repo.rc == 0)
  tags: ['hyprland', 'packages']

- name: Build Hyprland from source
  block:
    - name: Install additional build dependencies for source build
      ansible.builtin.apt:
        name:
          - libgtk-3-dev
          - libgbm-dev
          - libvulkan-dev
          - libxcb-damage0-dev
          - libxcb-xfixes0-dev
          - libxcb-xinerama0-dev
          - libxcb-xinput-dev
          - libxcb-xkb-dev
          - libxkbcommon-x11-dev
          - libwayland-dev
          - wayland-protocols
        state: present
      become: yes

    - name: Create build directory
      ansible.builtin.file:
        path: "/tmp/hyprland-build"
        state: directory
        mode: '0755'

    - name: Clone Hyprland repository
      ansible.builtin.git:
        repo: "https://github.com/hyprwm/Hyprland.git"
        dest: "/tmp/hyprland-build/Hyprland"
        version: "v0.39.1"  # Last version compatible with Ubuntu 24.04
        force: yes

    - name: Build and install Hyprland
      ansible.builtin.shell: |
        cd /tmp/hyprland-build/Hyprland
        make clear
        make release
      become: yes
      args:
        creates: /usr/local/bin/Hyprland

    - name: Install Hyprland binary
      ansible.builtin.shell: |
        cd /tmp/hyprland-build/Hyprland
        sudo make install
      become: yes

    - name: Clean up build directory
      ansible.builtin.file:
        path: "/tmp/hyprland-build"
        state: absent
  when: de_hyprland_build_from_source
  tags: ['hyprland', 'build']

- name: Create Hyprland session file
  ansible.builtin.copy:
    dest: /usr/share/wayland-sessions/hyprland.desktop
    content: |
      [Desktop Entry]
      Name=Hyprland
      Comment=An independent, highly customizable, dynamic tiling Wayland compositor
      Exec=Hyprland
      Type=Application
      DesktopNames=Hyprland
      Keywords=wayland;compositor;tiling;
    mode: '0644'
  become: yes
  tags: ['hyprland', 'session']

- name: Install greetd display manager
  ansible.builtin.apt:
    name:
      - greetd
      - greetd-tuigreet
    state: present
  become: yes
  tags: ['hyprland', 'display-manager']

- name: Configure greetd for Hyprland
  ansible.builtin.template:
    src: greetd-config.toml.j2
    dest: /etc/greetd/config.toml
    owner: root
    group: root
    mode: '0644'
    backup: yes
  become: yes
  notify: restart display manager
  tags: ['hyprland', 'display-manager']

- name: Create Hyprland config directory for user
  ansible.builtin.file:
    path: "/home/{{ primary_user }}/.config/hypr"
    state: directory
    owner: "{{ primary_user }}"
    group: "{{ primary_user }}"
    mode: '0755'
  tags: ['hyprland', 'config']

- name: Deploy default Hyprland configuration
  ansible.builtin.template:
    src: hyprland.conf.j2
    dest: "/home/{{ primary_user }}/.config/hypr/hyprland.conf"
    owner: "{{ primary_user }}"
    group: "{{ primary_user }}"
    mode: '0644'
    backup: yes
  tags: ['hyprland', 'config']

- name: Create Waybar config directory
  ansible.builtin.file:
    path: "/home/{{ primary_user }}/.config/waybar"
    state: directory
    owner: "{{ primary_user }}"
    group: "{{ primary_user }}"
    mode: '0755'
  when: de_hyprland_bar == "waybar"
  tags: ['hyprland', 'waybar']

- name: Deploy Waybar configuration
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "/home/{{ primary_user }}/.config/waybar/{{ item.dest }}"
    owner: "{{ primary_user }}"
    group: "{{ primary_user }}"
    mode: '0644'
    backup: yes
  loop:
    - { src: 'waybar-config.json.j2', dest: 'config.json' }
    - { src: 'waybar-style.css.j2', dest: 'style.css' }
  when: de_hyprland_bar == "waybar"
  tags: ['hyprland', 'waybar']

- name: Create wofi config directory
  ansible.builtin.file:
    path: "/home/{{ primary_user }}/.config/wofi"
    state: directory
    owner: "{{ primary_user }}"
    group: "{{ primary_user }}"
    mode: '0755'
  when: de_hyprland_launcher == "wofi"
  tags: ['hyprland', 'wofi']

- name: Deploy wofi configuration
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "/home/{{ primary_user }}/.config/wofi/{{ item.dest }}"
    owner: "{{ primary_user }}"
    group: "{{ primary_user }}"
    mode: '0644'
  loop:
    - { src: 'wofi-config.j2', dest: 'config' }
    - { src: 'wofi-style.css.j2', dest: 'style.css' }
  when: de_hyprland_launcher == "wofi"
  tags: ['hyprland', 'wofi']

- name: Ensure XDG environment for Wayland
  ansible.builtin.lineinfile:
    path: "/home/{{ primary_user }}/.profile"
    line: "{{ item }}"
    create: yes
    owner: "{{ primary_user }}"
    group: "{{ primary_user }}"
    mode: '0644'
  loop:
    - 'export XDG_SESSION_TYPE=wayland'
    - 'export XDG_SESSION_DESKTOP=Hyprland'
    - 'export XDG_CURRENT_DESKTOP=Hyprland'
  tags: ['hyprland', 'environment']

- name: Configure environment for NVIDIA GPUs
  block:
    - name: Add NVIDIA Wayland environment variables
      ansible.builtin.lineinfile:
        path: "/home/{{ primary_user }}/.profile"
        line: "{{ item }}"
        create: yes
        owner: "{{ primary_user }}"
        group: "{{ primary_user }}"
        mode: '0644'
      loop:
        - 'export WLR_NO_HARDWARE_CURSORS=1'
        - 'export LIBVA_DRIVER_NAME=nvidia'
        - 'export GBM_BACKEND=nvidia-drm'
        - '__GLX_VENDOR_LIBRARY_NAME=nvidia'
        - 'export WLR_DRM_DEVICES=/dev/dri/card1:/dev/dri/card0'

    - name: Warn about NVIDIA limitations
      ansible.builtin.debug:
        msg: |
          WARNING: NVIDIA GPU detected. Hyprland support for NVIDIA is limited.
          Some features may not work properly. Consider using X11 if you experience issues.
  when: "'nvidia' in ansible_facts.packages"
  tags: ['hyprland', 'nvidia']